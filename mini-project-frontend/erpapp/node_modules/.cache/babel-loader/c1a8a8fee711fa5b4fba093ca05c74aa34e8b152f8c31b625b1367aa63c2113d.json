{"ast":null,"code":"const BASE_URL = \"http://localhost:8080/api\";\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${BASE_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    return response.json();\n  } catch (error) {\n    console.error(\"Error registering user:\", error);\n    throw error;\n  }\n};\nexport const getStudents = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/students`);\n    if (Array.isArray(response.data)) {\n      return response.data;\n    } else {\n      throw new Error(\"Unexpected response format\");\n    }\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","json","error","console","getStudents","Array","isArray","data","Error"],"sources":["/home/sonu2030/Desktop/mini-project-frontend/erpapp/src/api/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8080/api\";\n\nexport const registerUser = async (userData) => {\n    try {\n        const response = await fetch(`${BASE_URL}/register`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(userData),\n        });\n        return response.json();\n    } catch (error) {\n        console.error(\"Error registering user:\", error);\n        throw error;\n    }\n};\n\n\nexport const getStudents = async () => {\n    try {\n        const response = await fetch(`${BASE_URL}/api/students`);\n        if (Array.isArray(response.data)) {\n            return response.data;\n        } else {\n            throw new Error(\"Unexpected response format\");\n        }\n    } catch (error) {\n        console.error(\"Error fetching students:\", error);\n        throw error;\n    }\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW,EAAE;MACjDK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IACjC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,eAAe,CAAC;IACxD,IAAIc,KAAK,CAACC,OAAO,CAACZ,QAAQ,CAACa,IAAI,CAAC,EAAE;MAC9B,OAAOb,QAAQ,CAACa,IAAI;IACxB,CAAC,MAAM;MACH,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IACjD;EACJ,CAAC,CAAC,OAAON,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}