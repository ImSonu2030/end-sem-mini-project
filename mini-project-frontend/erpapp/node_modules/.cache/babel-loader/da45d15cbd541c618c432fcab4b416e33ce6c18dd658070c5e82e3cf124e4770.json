{"ast":null,"code":"const BASE_URL = \"http://localhost:8080/api\";\nexport const registerUser = async userData => {\n  try {\n    const response = await fetch(`${BASE_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    return response.json();\n  } catch (error) {\n    console.error(\"Error registering user:\", error);\n    throw error;\n  }\n};\nexport const getStudents = async token => {\n  try {\n    const response = await fetch(`${BASE_URL}/students`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}` // Include the token\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};\nexport const getStudentDetails = async (token, rollNumber) => {\n  try {\n    const response = await fetch(`${BASE_URL}/student/${rollNumber}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}` // Include the token\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching student details:\", error);\n    throw error;\n  }\n};\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Login failed with status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data; // Handle token/session if needed\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error;\n  }\n};\nexport const signUpUser = async userData => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (!response.ok) {\n      throw new Error(`Sign Up failed with status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Sign Up failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","registerUser","userData","response","fetch","method","headers","body","JSON","stringify","json","error","console","getStudents","token","Authorization","ok","Error","status","data","getStudentDetails","rollNumber","loginUser","username","password","signUpUser"],"sources":["/home/sonu2030/Desktop/mini-project-frontend/erpapp/src/api/api.js"],"sourcesContent":["const BASE_URL = \"http://localhost:8080/api\";\n\nexport const registerUser = async (userData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n    return response.json();\n  } catch (error) {\n    console.error(\"Error registering user:\", error);\n    throw error;\n  }\n};\n\n\nexport const getStudents = async (token) => {\n  try {\n      const response = await fetch(`${BASE_URL}/students`, {\n          method: \"GET\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`, // Include the token\n          },\n      });\n\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n  } catch (error) {\n      console.error(\"Error fetching students:\", error);\n      throw error;\n  }\n};\n\n\nexport const getStudentDetails = async (token, rollNumber) => {\n  try {\n      const response = await fetch(`${BASE_URL}/student/${rollNumber}`, {\n          method: \"GET\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`, // Include the token\n          },\n      });\n\n      if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n  } catch (error) {\n      console.error(\"Error fetching student details:\", error);\n      throw error;\n  }\n};\n\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ username, password })\n    });\n\n    if (!response.ok) {\n      throw new Error(`Login failed with status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data; // Handle token/session if needed\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n    throw error;\n  }\n};\n\nexport const signUpUser = async (userData) => {\n  try {\n    const response = await fetch(`${BASE_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Sign Up failed with status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Sign Up failed:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}